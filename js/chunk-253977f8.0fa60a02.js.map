{"version":3,"sources":["webpack:///./src/views/PublicChatRoom.vue?9cef","webpack:///./src/views/PublicChatRoom.vue?987f","webpack:///src/views/PublicChatRoom.vue","webpack:///./src/views/PublicChatRoom.vue?74b8","webpack:///./src/views/PublicChatRoom.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","userData","_v","_s","attendees","length","_l","attendee","index","key","avatar","name","account","msg","class","type","text","time","directives","rawName","value","expression","domProps","on","$event","indexOf","_k","keyCode","sendMessage","apply","arguments","target","composing","newMsg","staticRenderFns","components","Navbar","data","userId","localStorage","getItem","msgs","socket","methods","socketStart","emit","console","log","push","message","listenToServer","notice","publicChatRecord","inRoomUsers","socketEnd","reason","disconnect","title","created","fetchUser","beforeDestroy","component"],"mappings":"kHAAA,W,yCCAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,SAAS,CAACG,MAAM,CAAC,eAAeP,EAAIQ,YAAYJ,EAAG,UAAU,CAACE,YAAY,qBAAqB,CAACF,EAAG,QAAQ,CAACE,YAAY,aAAa,CAACF,EAAG,IAAI,CAACE,YAAY,mBAAmB,CAACN,EAAIS,GAAG,SAAST,EAAIU,GAAGV,EAAIW,UAAUC,QAAQ,OAAOR,EAAG,KAAKJ,EAAIa,GAAIb,EAAa,WAAE,SAASc,EAASC,GAAO,OAAOX,EAAG,KAAK,CAACY,IAAID,GAAO,CAACX,EAAG,MAAM,CAACG,MAAM,CAAC,IAAMO,EAASG,OAAO,IAAM,MAAMb,EAAG,OAAO,CAACE,YAAY,QAAQ,CAACN,EAAIS,GAAGT,EAAIU,GAAGI,EAASI,SAASd,EAAG,OAAO,CAACE,YAAY,WAAW,CAACN,EAAIS,GAAG,IAAIT,EAAIU,GAAGI,EAASK,iBAAgB,KAAKf,EAAG,OAAO,CAACE,YAAY,QAAQ,CAACF,EAAG,IAAI,CAACE,YAAY,cAAc,CAACN,EAAIS,GAAG,WAAWL,EAAG,MAAM,CAACE,YAAY,aAAaN,EAAIa,GAAIb,EAAQ,MAAE,SAASoB,EAAIL,GAAO,OAAOX,EAAG,MAAM,CAACY,IAAID,GAAO,CAACX,EAAG,MAAM,CAACiB,MAAMD,EAAIE,MAAM,CAAClB,EAAG,OAAO,CAACJ,EAAIS,GAAGT,EAAIU,GAAGU,EAAIG,WAAWnB,EAAG,MAAM,CAACiB,MAAmB,eAAbD,EAAIE,KAC/4B,kBACa,WAAbF,EAAIE,KACJ,cACA,gBAAgB,CAAClB,EAAG,OAAO,CAACJ,EAAIS,GAAGT,EAAIU,GAAGU,EAAII,gBAAe,GAAGpB,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,QAAQ,CAACqB,WAAW,CAAC,CAACP,KAAK,QAAQQ,QAAQ,UAAUC,MAAO3B,EAAU,OAAE4B,WAAW,WAAWrB,MAAM,CAAC,KAAO,OAAO,YAAc,WAAWsB,SAAS,CAAC,MAAS7B,EAAU,QAAG8B,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAIA,EAAOT,KAAKU,QAAQ,QAAQhC,EAAIiC,GAAGF,EAAOG,QAAQ,QAAQ,GAAGH,EAAOf,IAAI,SAAkB,KAAchB,EAAImC,YAAYC,MAAM,KAAMC,YAAY,MAAQ,SAASN,GAAWA,EAAOO,OAAOC,YAAqBvC,EAAIwC,OAAOT,EAAOO,OAAOX,WAAUvB,EAAG,MAAM,CAACG,MAAM,CAAC,MAAQ,KAAK,OAAS,KAAK,QAAU,YAAY,KAAO,OAAO,MAAQ,8BAA8BuB,GAAG,CAAC,MAAQ9B,EAAImC,cAAc,CAAC/B,EAAG,OAAO,CAACG,MAAM,CAAC,EAAI,0gBAA0gB,KAAO,sBAAsB,IACxwCkC,EAAkB,G,wICgTtB,GACEvB,KAAM,iBACNwB,WAAY,CACVC,OAAJ,QAEEC,KALF,WAMI,MAAO,CAELC,OAAQC,aAAaC,QAAQ,QAC7BvC,SAAU,GACVwC,KAAM,GACNR,OAAQ,GACR7B,UAAW,GAEXsC,OAAQ,OAAd,QAAc,CAAd,qCAGEC,QAAS,CACP,UADJ,SACA,0LAEA,sBAFA,UAEA,EAFA,OAIA,oBAJA,sBAKA,wBALA,OAQA,qCAIA,8DAEA,kBACA,yBACA,qBACA,2BACA,mBAIA,aACA,uCACA,kBACA,oCAzBA,qDA4BA,0BA5BA,6DA+BIC,YAhCJ,SAgCA,GAEMlD,KAAKgD,OAAOG,KAAK,gBAAiBP,GAElC5C,KAAKgD,OAAOG,KAAK,cAAeP,GAEhC5C,KAAKgD,OAAOG,KAAK,mBAAoBP,GACrCQ,QAAQC,IAAI,QAAlB,oCAGInB,YA1CJ,WA2CMlC,KAAK+C,KAAKO,KAAK,CACbhC,KAAMtB,KAAKuC,OACXlB,KAAM,UACNE,KAAM,GAAd,4BAGMvB,KAAKgD,OAAOG,KAAK,aAAc,CAC7BP,OAAQ5C,KAAK4C,OACbW,QAASvD,KAAKuC,SAEhBvC,KAAKuC,OAAS,IAGhBiB,eAxDJ,WAwDA,WAEMxD,KAAKgD,OAAOnB,GAAG,WAAW,SAAhC,GACQuB,QAAQC,IAAI,SAAUI,MAGxBzD,KAAKgD,OAAOnB,GAAG,eAAe,SAApC,GACQuB,QAAQC,IAAI,cAAeI,MAI7BzD,KAAKgD,OAAOnB,GAAG,sBAAsB,SAA3C,GACQuB,QAAQC,IAAI,mBAAoBK,MAIlC1D,KAAKgD,OAAOnB,GAAG,eAAe,SAApC,GACQuB,QAAQC,IAAI,cAAeM,MAI7B3D,KAAKgD,OAAOnB,GAAG,uBAArB,uKACA,6BADA,kBAKA,sBALA,UAKA,EALA,OAOA,oBAPA,sBAQA,wBARA,OAWA,EAXA,kBAWA,QAGA,qDACA,kBACA,gBACA,YACA,kBACA,UAIA,aACA,8BACA,kBACA,oCA1BA,qDA6BA,0BA7BA,iHAkCM7B,KAAKgD,OAAOnB,GAAG,yBAAyB,SAA9C,GACQ,IAAR,YACA,oBACA,YAAU,OAAV,YAGQ,EAAR,WACUP,KAAM,GAAhB,uBACUD,KAAM,aACNE,KAAM,GAAhB,4BAGQ,EAAR,6DACQ6B,QAAQC,IAAIT,EAAQ,gBAItB5C,KAAKgD,OAAOnB,GAAG,cAAc,SAAnC,8BACQuB,QAAQC,IAAI,WAAYT,EAAQ,cAAeW,GAC/C,EAAR,WACUjC,KAAM,GAAhB,UACUD,KAAM,SACNE,KAAM,GAAhB,+BAGM6B,QAAQC,IAAI,8BAEdO,UA1IJ,WA2IM5D,KAAKgD,OAAOnB,GAAG,cAAc,SAAnC,GACQuB,QAAQC,IAAI,+BAAgCQ,MAE9C7D,KAAKgD,OAAOc,aAEZ,EAAN,WACQC,MAAO,cAIbC,QAtKF,WAuKI,OAAJ,OAAI,CAAJ,MACI,OAAJ,OAAI,CAAJ,aACIhE,KAAKiE,UAAUjE,KAAK4C,QACpB5C,KAAKkD,YAAYlD,KAAK4C,QACtB5C,KAAKwD,kBAEPU,cA7KF,WA8KIlE,KAAK4D,cCne+U,I,wBCQpVO,EAAY,eACd,EACArE,EACA0C,GACA,EACA,KACA,WACA,MAIa,aAAA2B,E","file":"js/chunk-253977f8.0fa60a02.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PublicChatRoom.vue?vue&type=style&index=0&id=7a00f7f4&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"public-chat-container\"},[_c('Navbar',{attrs:{\"initial-user\":_vm.userData}}),_c('section',{staticClass:\"section-container\"},[_c('aside',{staticClass:\"user-list\"},[_c('p',{staticClass:\"user-list-title\"},[_vm._v(\"上線使用者(\"+_vm._s(_vm.attendees.length)+\")\")]),_c('ul',_vm._l((_vm.attendees),function(attendee,index){return _c('li',{key:index},[_c('img',{attrs:{\"src\":attendee.avatar,\"alt\":\"\"}}),_c('span',{staticClass:\"name\"},[_vm._v(_vm._s(attendee.name))]),_c('span',{staticClass:\"account\"},[_vm._v(\"@\"+_vm._s(attendee.account))])])}),0)]),_c('main',{staticClass:\"room\"},[_c('p',{staticClass:\"room-title\"},[_vm._v(\"公開聊天室\")]),_c('div',{staticClass:\"room-body\"},_vm._l((_vm.msgs),function(msg,index){return _c('div',{key:index},[_c('div',{class:msg.type},[_c('span',[_vm._v(_vm._s(msg.text))])]),_c('div',{class:msg.type === 'connection'\n                ? 'connection-time'\n                : msg.type === 'msg-in'\n                ? 'msg-in-time'\n                : 'msg-out-time'},[_c('span',[_vm._v(_vm._s(msg.time))])])])}),0),_c('div',{staticClass:\"room-footer\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newMsg),expression:\"newMsg\"}],attrs:{\"type\":\"text\",\"placeholder\":\"輸入訊息...\"},domProps:{\"value\":(_vm.newMsg)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.sendMessage.apply(null, arguments)},\"input\":function($event){if($event.target.composing){ return; }_vm.newMsg=$event.target.value}}}),_c('svg',{attrs:{\"width\":\"20\",\"height\":\"21\",\"viewBox\":\"0 0 20 21\",\"fill\":\"none\",\"xmlns\":\"http://www.w3.org/2000/svg\"},on:{\"click\":_vm.sendMessage}},[_c('path',{attrs:{\"d\":\"M19.13 9.35798L1.614 0.107979C1.324 -0.0440207 0.973998 0.00597923 0.740999 0.233979C0.510999 0.459979 0.447999 0.810979 0.590999 1.10198L4.953 10.022L0.590999 18.942C0.447999 19.234 0.510999 19.585 0.740999 19.81C0.885998 19.95 1.074 20.022 1.264 20.022C1.384 20.022 1.504 19.994 1.614 19.935L19.131 10.685C19.376 10.555 19.531 10.299 19.531 10.021C19.531 9.74298 19.376 9.48898 19.131 9.35898L19.13 9.35798ZM2.948 2.50998L15.752 9.27198H6.255L2.948 2.51198V2.50998ZM6.255 10.77H15.753L2.948 17.535L6.255 10.772V10.77Z\",\"fill\":\"#FF6600\"}})])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"public-chat-container\">\r\n    <Navbar :initial-user=\"userData\" />\r\n    <!-- TODO 在線使用者名單 -->\r\n    <section class=\"section-container\">\r\n      <aside class=\"user-list\">\r\n        <p class=\"user-list-title\">上線使用者({{ attendees.length }})</p>\r\n        <ul>\r\n          <li v-for=\"(attendee, index) in attendees\" :key=\"index\">\r\n            <img :src=\"attendee.avatar\" alt=\"\" />\r\n            <span class=\"name\">{{ attendee.name }}</span>\r\n            <span class=\"account\">@{{ attendee.account }}</span>\r\n          </li>\r\n        </ul>\r\n      </aside>\r\n      <!-- TODO 及時聊天視窗 -->\r\n      <main class=\"room\">\r\n        <p class=\"room-title\">公開聊天室</p>\r\n        <div class=\"room-body\">\r\n          <div v-for=\"(msg, index) in msgs\" :key=\"index\">\r\n            <div :class=\"msg.type\">\r\n              <span>{{ msg.text }}</span>\r\n            </div>\r\n            <div\r\n              :class=\"\r\n                msg.type === 'connection'\r\n                  ? 'connection-time'\r\n                  : msg.type === 'msg-in'\r\n                  ? 'msg-in-time'\r\n                  : 'msg-out-time'\r\n              \"\r\n            >\r\n              <span>{{ msg.time }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"room-footer\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"輸入訊息...\"\r\n            v-model=\"newMsg\"\r\n            @keyup.enter=\"sendMessage\"\r\n          />\r\n          <svg\r\n            @click=\"sendMessage\"\r\n            width=\"20\"\r\n            height=\"21\"\r\n            viewBox=\"0 0 20 21\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M19.13 9.35798L1.614 0.107979C1.324 -0.0440207 0.973998 0.00597923 0.740999 0.233979C0.510999 0.459979 0.447999 0.810979 0.590999 1.10198L4.953 10.022L0.590999 18.942C0.447999 19.234 0.510999 19.585 0.740999 19.81C0.885998 19.95 1.074 20.022 1.264 20.022C1.384 20.022 1.504 19.994 1.614 19.935L19.131 10.685C19.376 10.555 19.531 10.299 19.531 10.021C19.531 9.74298 19.376 9.48898 19.131 9.35898L19.13 9.35798ZM2.948 2.50998L15.752 9.27198H6.255L2.948 2.51198V2.50998ZM6.255 10.77H15.753L2.948 17.535L6.255 10.772V10.77Z\"\r\n              fill=\"#FF6600\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </main>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n.public-chat-container {\r\n  display: flex;\r\n  height: 100vh;\r\n\r\n  .section-container {\r\n    display: flex;\r\n    flex: 1;\r\n\r\n    .user-list {\r\n      border: 1px solid #e6ecf0;\r\n      flex: 1;\r\n      max-width: 390px;\r\n\r\n      .user-list-title {\r\n        font-family: Noto Sans TC;\r\n        font-style: normal;\r\n        font-weight: bold;\r\n        font-size: 18px;\r\n        line-height: 26px;\r\n        color: #1c1c1c;\r\n        margin: 15px 0 14px 15px;\r\n      }\r\n      ul {\r\n        padding-inline-start: 0px;\r\n        margin-block: 0em;\r\n        li {\r\n          border: 1px solid #e6ecf0;\r\n          list-style: none;\r\n          display: flex;\r\n\r\n          padding: 10px 15px 15px 15px;\r\n\r\n          img {\r\n            border-radius: 50%;\r\n            width: 50px;\r\n            height: 50px;\r\n          }\r\n\r\n          span {\r\n            margin: auto 0%;\r\n          }\r\n\r\n          // common CSS for .name and .account\r\n          .name,\r\n          .account {\r\n            font-family: Noto Sans TC;\r\n            font-style: normal;\r\n            font-size: 15px;\r\n            line-height: 22px;\r\n          }\r\n\r\n          .name {\r\n            margin-left: 10px;\r\n            margin-right: 5px;\r\n            font-weight: bold;\r\n            color: #1c1c1c;\r\n          }\r\n\r\n          .account {\r\n            font-weight: 500;\r\n            color: #657786;\r\n          }\r\n        }\r\n      }\r\n      .test-btn {\r\n        margin: auto 0 0 0;\r\n      }\r\n    }\r\n    .room {\r\n      flex: 1;\r\n      position: relative;\r\n      display: flex;\r\n      flex-flow: column;\r\n      border-top: 1px solid #e6ecf0;\r\n\r\n      .room-title {\r\n        font-family: Noto Sans TC;\r\n        font-style: normal;\r\n        font-weight: bold;\r\n        font-size: 18px;\r\n        line-height: 26px;\r\n        color: #1c1c1c;\r\n        margin: 13px 0 14px 15px;\r\n      }\r\n      .room-body {\r\n        flex: 1;\r\n        overflow-y: scroll;\r\n        margin: 0 15px;\r\n\r\n        // common CSS for showing messages\r\n        .connection,\r\n        .msg-in,\r\n        .msg-out {\r\n          padding: 10px 15px;\r\n          width: fit-content;\r\n          font-family: Noto Sans TC;\r\n          font-style: normal;\r\n          font-size: 15px;\r\n        }\r\n\r\n        .connection {\r\n          background: #e5e5e5;\r\n          border-radius: 50px;\r\n          margin: 0 auto;\r\n          font-weight: 500;\r\n          line-height: 15px;\r\n          text-align: center;\r\n          color: #657786;\r\n        }\r\n\r\n        .msg-in {\r\n          background: #e6ecf0;\r\n          border-radius: 25px 25px 25px 0px;\r\n          line-height: 20px;\r\n          color: #1c1c1c;\r\n        }\r\n\r\n        .msg-out {\r\n          background: #ff6600;\r\n          border-radius: 25px 25px 0px 25px;\r\n          margin: 0 0 0 auto;\r\n          line-height: 20px;\r\n          color: #ffffff;\r\n        }\r\n\r\n        // common CSS for showing time\r\n        .connection-time,\r\n        .msg-in-time,\r\n        .msg-out-time {\r\n          margin-top: 2px;\r\n          font-family: Noto Sans TC;\r\n          font-style: normal;\r\n          font-weight: normal;\r\n          font-size: 13px;\r\n          line-height: 13px;\r\n          color: #657786;\r\n        }\r\n\r\n        .connection-time {\r\n          text-align: center;\r\n          margin-bottom: 15px;\r\n        }\r\n\r\n        .msg-in-time {\r\n          margin-bottom: 35px;\r\n        }\r\n\r\n        .msg-out-time {\r\n          @extend .msg-in-time;\r\n          width: fit-content;\r\n          margin-left: auto;\r\n        }\r\n      }\r\n\r\n      .room-footer {\r\n        display: flex;\r\n        align-items: center;\r\n        height: 55px;\r\n        border: 1px solid #e6ecf0;\r\n\r\n        input {\r\n          height: 32px;\r\n          flex: 1;\r\n          margin: 12px 17px 11px 15px;\r\n          padding: 0 0 0 15px;\r\n          background: #e6ecf0;\r\n          border-radius: 50px;\r\n          border: none;\r\n          outline: none;\r\n\r\n          &::placeholder {\r\n            font-family: Noto Sans TC;\r\n            font-style: normal;\r\n            font-weight: normal;\r\n            font-size: 15px;\r\n            line-height: 15px;\r\n            color: rgba(0, 0, 0, 0.4);\r\n          }\r\n        }\r\n        svg {\r\n          height: 20px;\r\n          width: 19px;\r\n          margin-right: 17.5px;\r\n          margin-top: 4px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media all and (max-width: 768px) {\r\n  .public-chat-container {\r\n    display: block;\r\n\r\n    * {\r\n      box-sizing: border-box;\r\n    }\r\n\r\n    > .container {\r\n    }\r\n\r\n    .section-container {\r\n      display: flex;\r\n      height: calc(100vh - 28px);\r\n\r\n      .user-list {\r\n        ul {\r\n          li {\r\n            flex-wrap: wrap;\r\n          }\r\n        }\r\n      }\r\n\r\n      .room {\r\n        .room-title {\r\n        }\r\n\r\n        .room-body {\r\n        }\r\n\r\n        .room-footer {\r\n          input {\r\n            margin: 0;\r\n          }\r\n\r\n          svg {\r\n            margin: 4px min(17px, 2vw) 0 min(17px, 2vw);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n<script>\r\nimport Navbar from \"./../components/Navbar\";\r\nimport { io } from \"socket.io-client\";\r\nimport { TWLocale } from \"./../utils/mixins\";\r\nimport user from \"./../api/user\";\r\nimport {\r\n  keepUnauthorizedOut,\r\n  roleAccessControl,\r\n  Toast,\r\n} from \"../utils/helpers\";\r\n\r\nexport default {\r\n  name: \"PublicChatRoom\",\r\n  components: {\r\n    Navbar,\r\n  },\r\n  data() {\r\n    return {\r\n      // userId: Number(localStorage.getItem(\"user\")),\r\n      userId: localStorage.getItem(\"user\"),\r\n      userData: {},\r\n      msgs: [],\r\n      newMsg: \"\",\r\n      attendees: [],\r\n      // 連線至socket server\r\n      socket: io(\"https://actwitter.herokuapp.com\"),\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchUser(id) {\r\n      try {\r\n        const response = await user.getUserInfo(id);\r\n\r\n        if (response.statusText !== \"OK\") {\r\n          throw new Error(response.statusText);\r\n        }\r\n\r\n        this.userData = { ...response.data };\r\n\r\n        // 避免重複加入相同使用者資料\r\n        if (\r\n          !this.attendees.some((attendee) => attendee.id === this.userData.id)\r\n        ) {\r\n          this.attendees.push({\r\n            avatar: this.userData.avatar,\r\n            name: this.userData.name,\r\n            account: this.userData.account,\r\n            id: this.userData.id,\r\n          });\r\n        }\r\n\r\n        this.msgs.push({\r\n          text: `${this.userData.name}加入聊天`,\r\n          type: \"connection\",\r\n          time: `${TWLocale.formatTime}`,\r\n        });\r\n      } catch (error) {\r\n        console.log(\"error\", error);\r\n      }\r\n    },\r\n    socketStart(userId) {\r\n      // 連線並送出user id\r\n      this.socket.emit(\"connectServer\", userId);\r\n      // 讀取通知 new\r\n      this.socket.emit(\"read-notice\", userId);\r\n      // 觸發加入公開聊天室\r\n      this.socket.emit(\"join-public-room\", userId);\r\n      console.log(`user ${userId} socket just started!`);\r\n    },\r\n\r\n    sendMessage() {\r\n      this.msgs.push({\r\n        text: this.newMsg,\r\n        type: \"msg-out\",\r\n        time: `${TWLocale.formatTime}`,\r\n      });\r\n      // 向公開聊天室發送訊息\r\n      this.socket.emit(\"public-msg\", {\r\n        userId: this.userId,\r\n        message: this.newMsg,\r\n      });\r\n      this.newMsg = \"\";\r\n    },\r\n\r\n    listenToServer() {\r\n      // 接收通知 new\r\n      this.socket.on(\"notices\", (notice) => {\r\n        console.log(\"notice\", notice);\r\n      });\r\n\r\n      this.socket.on(\"read-notice\", (notice) => {\r\n        console.log(\"read-notice\", notice);\r\n      });\r\n\r\n      //監聽接收公開聊天室的紀錄\r\n      this.socket.on(\"public-chat-record\", (publicChatRecord) => {\r\n        console.log(\"publicChatRecord\", publicChatRecord);\r\n      });\r\n\r\n      // TODO 監聽接收線上使用者列表及所有使用者資料\r\n      this.socket.on(\"online-list\", (inRoomUsers) => {\r\n        console.log(\"inRoomUsers\", inRoomUsers);\r\n      });\r\n\r\n      // 監聽公開聊天室公告廣播\r\n      this.socket.on(\"public-online-notice\", async (userId) => {\r\n        console.log(userId, \"joined room\");\r\n\r\n        // 利用 userId 取得新加入者的資料，要加入聊天室清單\r\n        try {\r\n          const response = await user.getUserInfo(userId);\r\n\r\n          if (response.statusText !== \"OK\") {\r\n            throw new Error(response.statusText);\r\n          }\r\n\r\n          const userData = { ...response.data };\r\n\r\n          // 避免重複加入相同使用者資料\r\n          if (!this.attendees.some((attendee) => attendee.id === userData.id)) {\r\n            this.attendees.push({\r\n              avatar: userData.avatar,\r\n              name: userData.name,\r\n              account: userData.account,\r\n              id: userData.id,\r\n            });\r\n          }\r\n\r\n          this.msgs.push({\r\n            text: `${userData.name}加入聊天`,\r\n            type: \"connection\",\r\n            time: `${TWLocale.formatTime}`,\r\n          });\r\n        } catch (error) {\r\n          console.log(\"error\", error);\r\n        }\r\n      });\r\n\r\n      // 監聽公開聊天室使用者下線訊息\r\n      this.socket.on(\"public-offline-notice\", (userId) => {\r\n        const userIdtoN = Number(userId);\r\n        const leftAttendee = this.attendees.find(\r\n          (user) => user.id === userIdtoN\r\n        );\r\n\r\n        this.msgs.push({\r\n          text: `${leftAttendee.name}離開聊天室`,\r\n          type: \"connection\",\r\n          time: `${TWLocale.formatTime}`,\r\n        });\r\n\r\n        this.attendees = this.attendees.filter((user) => user.id !== userIdtoN);\r\n        console.log(userId, \"left room\");\r\n      });\r\n\r\n      // 監聽公開聊天室聊天訊息\r\n      this.socket.on(\"public-msg\", ({ userId, message }) => {\r\n        console.log(\"userId: \", userId, \" ,message: \", message);\r\n        this.msgs.push({\r\n          text: `${message}`,\r\n          type: \"msg-in\",\r\n          time: `${TWLocale.formatTime}`,\r\n        });\r\n      });\r\n      console.log(`socket started listening!`);\r\n    },\r\n    socketEnd() {\r\n      this.socket.on(\"disconnect\", (reason) => {\r\n        console.log(\"socket has disconnected for:\", reason);\r\n      });\r\n      this.socket.disconnect();\r\n\r\n      Toast.fire({\r\n        title: \"離開公開聊天室\",\r\n      });\r\n    },\r\n  },\r\n  created() {\r\n    keepUnauthorizedOut(this);\r\n    roleAccessControl(this, \"8347\");\r\n    this.fetchUser(this.userId);\r\n    this.socketStart(this.userId);\r\n    this.listenToServer();\r\n  },\r\n  beforeDestroy() {\r\n    this.socketEnd(); // 離開聊天室頁面則停止嘗試 reconnect\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PublicChatRoom.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PublicChatRoom.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PublicChatRoom.vue?vue&type=template&id=7a00f7f4&scoped=true&\"\nimport script from \"./PublicChatRoom.vue?vue&type=script&lang=js&\"\nexport * from \"./PublicChatRoom.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PublicChatRoom.vue?vue&type=style&index=0&id=7a00f7f4&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7a00f7f4\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}